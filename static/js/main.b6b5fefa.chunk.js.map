{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/thoughts/ThoughtSummary.js","components/thoughts/ThoughtsList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/thoughts/ThoughtDetails.js","components/auth/Login.js","components/auth/SignUp.js","components/thoughts/CreateThought.js","store/actions/thoughtActions.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/thoughtReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","logout","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ThoughtSummary","thought","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ThoughtsList","thoughts","map","id","Notifications","notifications","notification","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Login","email","password","e","setState","target","value","preventDefault","login","authError","onSubmit","handleSubmit","bind","htmlFor","placeholder","onChange","handleChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateThought","createThought","history","push","authorID","add","Date","App","exact","path","component","ThoughtDetails","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","message","thoughtReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6b5fefa.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"nav-items-container\">\n            <NavLink to=\"/post-my-thoughts/create-thought\">\n                <li className=\"nav-item\">New Thought</li>\n            </NavLink>\n            <a onClick={props.logout}>\n                <li className=\"nav-item\">Logout</li>\n            </a>\n            <NavLink to=\"/post-my-thoughts/\">\n                <li className=\"nav-item\">{props.profile.initials}</li>\n            </NavLink>\n        </ul>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => dispatch(logout()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const login = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        // make asynce call to db\n        const firebase = getFirebase();\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\n            .then(() => {\n                dispatch({ type: \"LOGIN_SUCCESS\" });\n            })\n            .catch((err) => {\n                dispatch({ type: \"LOGIN_ERROR\", err });\n            });\n    };\n};\n\nexport const logout = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        // make asynce call to db\n        const firebase = getFirebase();\n        firebase\n            .auth()\n            .signOut()\n            .then(() => {\n                dispatch({ type: \"LOGOUT_SUCCESS\" });\n            });\n    };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make asynce call to db\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\n            .then((resp) => {\n                return firestore\n                    .collection(\"users\")\n                    .doc(resp.user.uid)\n                    .set({\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        initials: newUser.firstName[0] + newUser.lastName[0],\n                    });\n            })\n            .then(() => {\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\n            })\n            .catch((err) => {\n                dispatch({ type: \"SIGNUP_ERROR\", err });\n            });\n    };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = (props) => {\n    return (\n        <ul className=\"nav-items-container\">\n            <NavLink to=\"/post-my-thoughts/login\">\n                <li className=\"nav-item\">Login</li>\n            </NavLink>\n            <NavLink to=\"/post-my-thoughts/signup\">\n                <li className=\"nav-item\">Signup</li>\n            </NavLink>\n        </ul>\n    );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = ({ auth, profile }) => {\n    const links = auth.uid ? (\n        <SignedInLinks profile={profile} />\n    ) : (\n        <SignedOutLinks />\n    );\n    return (\n        <nav className=\"main-nav\">\n            <Link to=\"/post-my-thoughts\">\n                <div className=\"logo\">\n                    PostMy<strong>Thoughts</strong>\n                </div>\n            </Link>\n            <ul className=\"nav-items-container\">{links}</ul>\n        </nav>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ThoughtSummary = ({ thought }) => {\n    return (\n        <div className=\"thought-card\">\n            <div className=\"card-title\">{thought.title}</div>\n            <div className=\"card-author\">\n                Posted by {thought.authorFirstName} {thought.authorLastName}\n            </div>\n            <div className=\"card-date\">\n                {moment(thought.createdAt.toDate()).calendar()}\n            </div>\n        </div>\n    );\n};\n\nexport default ThoughtSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ThoughtSummary from \"./ThoughtSummary\";\n\nconst ThoughtsList = ({ thoughts }) => {\n    return (\n        <div className=\"thoughts-list\">\n            {thoughts &&\n                thoughts.map((thought) => {\n                    return (\n                        <Link\n                            to={\"post-my-thoughts/thoughts/\" + thought.id}\n                            key={thought.id}\n                        >\n                            <ThoughtSummary thought={thought} />\n                        </Link>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default ThoughtsList;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n    return (\n        <div className=\"notifications\">\n            <div>Notifications</div>\n            <ul className=\"notifications-container\">\n                {notifications &&\n                    notifications.map((notification) => {\n                        return (\n                            <li className=\"notification\" key={notification.id}>\n                                <div className=\"notification-user\">\n                                    {notification.user}\n                                </div>\n                                <div className=\"notification-content\">\n                                    {notification.content}\n                                </div>\n                                <div className=\"notification-date\">\n                                    {moment(\n                                        notification.time.toDate()\n                                    ).fromNow()}\n                                </div>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport ThoughtsList from \"../thoughts/ThoughtsList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    render() {\n        const { thoughts, auth, notifications } = this.props;\n\n        if (!auth.uid) return <Redirect to=\"/post-my-thoughts/login\" />;\n\n        return (\n            <div className=\"dashboard\">\n                <ThoughtsList thoughts={thoughts} />\n                <Notifications notifications={notifications} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        thoughts: state.firestore.ordered.thoughts,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: \"thoughts\", orderBy: [\"createdAt\", \"desc\"] },\n        { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\n    ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ThoughtDetails = ({ thought, auth }) => {\n    if (!auth.uid) return <Redirect to=\"/post-my-thoughts/login\" />;\n\n    if (thought) {\n        return (\n            <div className=\"thought-details\">\n                <div className=\"thought-title\">{thought.title}</div>\n                <div className=\"thought-desc\">{thought.content}</div>\n                <div className=\"author-and-date-container\">\n                    <div className=\"author\">\n                        Posted by {thought.authorFirstName}{\" \"}\n                        {thought.authorLastName}\n                    </div>\n                    <div className=\"date\">\n                        {moment(thought.createdAt.toDate()).calendar()}\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <div>Loading Thought...</div>;\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const thoughts = state.firestore.data.thoughts;\n    const thought = thoughts ? thoughts[id] : null;\n    return {\n        thought: thought,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{ collection: \"thoughts\" }])\n)(ThoughtDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n    };\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n        console.log(e.target.id, e.target.value);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.login(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to=\"/post-my-thoughts/\" />;\n\n        return (\n            <div className=\"login\">\n                <form\n                    onSubmit={this.handleSubmit.bind(this)}\n                    className=\"login-form\"\n                >\n                    <div className=\"login-username-container\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"email@test.ca\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"login-password-container\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <button className=\"login-btn\">Login</button>\n                    {authError ? <div>{authError}</div> : null}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (creds) => dispatch(login(creds)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n    };\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n        console.log(e.target.id, e.target.value);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to=\"/post-my-thoughts/\" />;\n        return (\n            <div className=\"login\">\n                <form\n                    onSubmit={this.handleSubmit.bind(this)}\n                    className=\"login-form\"\n                >\n                    <div className=\"login-username-container\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            placeholder=\"email@test.ca\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"login-first-name-container\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"firstName\"\n                            placeholder=\"Joe\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"login-last-name-container\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"lastName\"\n                            placeholder=\"Smith\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"login-password-container\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <button className=\"login-btn\">Signup</button>\n                    {authError ? <div>{authError}</div> : null}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createThought } from \"../../store/actions/thoughtActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateThought extends Component {\n    state = {\n        title: \"\",\n        content: \"\",\n    };\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.createThought(this.state);\n        this.props.history.push(\"/post-my-thoughts/\");\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/post-my-thoughts/login\" />;\n\n        return (\n            <div className=\"login\">\n                <form\n                    onSubmit={this.handleSubmit.bind(this)}\n                    className=\"login-form\"\n                >\n                    <div className=\"thought-title-container\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            className=\"thought-title-input\"\n                            placeholder=\"My New Thought\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"thought-content-container\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea\n                            id=\"content\"\n                            className=\"thought-content-input\"\n                            onChange={this.handleChange.bind(this)}\n                        ></textarea>\n                    </div>\n                    <button className=\"login-btn\">Create</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createThought: (thought) => dispatch(createThought(thought)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateThought);\n","export const createThought = (thought) => {\n    // if not using thunk---------\n    // return {\n    //     type: \"CREATE_THOUGHT\",\n    //     thought: thought,\n    // };\n    // ---------------------------\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make asynce call to db\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorID = getState().firebase.auth.uid;\n        firestore\n            .collection(\"thoughts\")\n            .add({\n                ...thought,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorID: authorID,\n                createdAt: new Date(),\n            })\n            .then(() => {\n                dispatch({ type: \"CREATE_THOUGHT\", thought: thought });\n            })\n            .catch((err) => {\n                dispatch({ type: \"CREATE_THOUGHT_ERROR\", err: err });\n            });\n    };\n};\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport \"./scss/app.scss\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ThoughtDetails from \"./components/thoughts/ThoughtDetails\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/SignUp\";\nimport CreateThought from \"./components/thoughts/CreateThought\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"app l-container-full-screen\">\n                    <Navbar />\n                    <div className=\"l-container-1080 main-content\">\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/post-my-thoughts\"\n                                component={Dashboard}\n                            />\n                            <Route\n                                path=\"/post-my-thoughts/thoughts/:id\"\n                                component={ThoughtDetails}\n                            />\n                            <Route\n                                path=\"/post-my-thoughts/login\"\n                                component={Login}\n                            />\n                            <Route\n                                path=\"/post-my-thoughts/signup\"\n                                component={Signup}\n                            />\n                            <Route\n                                path=\"/post-my-thoughts/create-thought\"\n                                component={CreateThought}\n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            console.log(\"login error\");\n            return {\n                ...state,\n                authError: \"login failed\",\n            };\n\n        case \"LOGIN_SUCCESS\":\n            console.log(\"login success\");\n            return {\n                ...state,\n                authError: null,\n            };\n\n        case \"LOGOUT_SUCCESS\":\n            console.log(\"logout success\");\n            return state;\n\n        case \"SIGNUP_SUCCESS\":\n            console.log(\"signup success\");\n            return {\n                ...state,\n                authError: null,\n            };\n\n        case \"SIGNUP_ERROR\":\n            console.log(\"signup error\");\n            return {\n                ...state,\n                authError: action.err.message,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","const initState = {\n    thoughts: [\n        { id: \"1\", title: \"a thought\", content: \"im thinking\" },\n        { id: \"2\", title: \"two thought\", content: \"im thinking aboit\" },\n        { id: \"3\", title: \"three thought\", content: \"im thinking aboit stuff\" },\n    ],\n};\n\nconst thoughtReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"CREATE_THOUGHT\":\n            console.log(\"created thought\", action.thought);\n            return state;\n        case \"CREATE_THOUGHT ERROR\":\n            console.log(\"created thought error\", action.err);\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default thoughtReducer;\n\n// for delete thought, read comments of video 30\n","import authReducer from \"./authReducer\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport thoughtReducer from \"./thoughtReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    thought: thoughtReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer,\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDYxqQK0qmJzamoY_e5OjkkG8UC9V4XRh4\",\n    authDomain: \"post-my-thought.firebaseapp.com\",\n    databaseURL: \"https://post-my-thought.firebaseio.com\",\n    projectId: \"post-my-thought\",\n    storageBucket: \"post-my-thought.appspot.com\",\n    messagingSenderId: \"609553640298\",\n    appId: \"1:609553640298:web:6f24e7450220cdedf6d313\",\n    measurementId: \"G-PMWLYXHMED\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport {\n    reduxFirestore,\n    getFirestore,\n    createFirestoreInstance,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n};\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: \"presence\",\n    sessions: \"sessions\",\n};\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector((state) => state.firebase.auth);\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children;\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <AuthIsLoaded>\n                    <App />\n                </AuthIsLoaded>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}